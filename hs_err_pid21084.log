#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000000006a065ed2, pid=21084, tid=0x0000000000006bb0
#
# JRE version: Java(TM) SE Runtime Environment (8.0_181-b13) (build 1.8.0_181-b13)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.181-b13 mixed mode windows-amd64 compressed oops)
# Problematic frame:
# V  [jvm.dll+0x145ed2]
#
# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#

---------------  T H R E A D  ---------------

Current thread (0x0000000002605000):  JavaThread "main" [_thread_in_vm, id=27568, stack(0x0000000002500000,0x0000000002600000)]

siginfo: ExceptionCode=0xc0000005, reading address 0x0000000000000000

Registers:
RAX=0x0000000000000000, RBX=0x0000000002605000, RCX=0x0000000002605000, RDX=0x00000000f27ebc48
RSP=0x000000000250a060, RBP=0x000000000250a160, RSI=0x0000000000000000, RDI=0x0000000000000000
R8 =0x000000000250a160, R9 =0x000000000250a0f8, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x00000000026051f8, R15=0x000000000250a260
RIP=0x000000006a065ed2, EFLAGS=0x0000000000010202

Top of Stack: (sp=0x000000000250a060)
0x000000000250a060:   00000000024fea90 0000000000000182
0x000000000250a070:   000000006a541830 000000006a52a668
0x000000000250a080:   0000000002605000 00000000024fea90
0x000000000250a090:   0000000000000182 000000006a541830
0x000000000250a0a0:   000000000250a0f8 00007ffb665bf0bb
0x000000000250a0b0:   0000000000000002 0000000000000000
0x000000000250a0c0:   00000000024a9dc0 00000000024a9d50
0x000000000250a0d0:   00000000024a9dc0 00007ffb665bdc09
0x000000000250a0e0:   00000000024a9d50 0000000000000000
0x000000000250a0f0:   0000000016e47390 0000000000000000
0x000000000250a100:   0000000000000000 0000000000000000
0x000000000250a110:   00000000024a9dc0 00000000024a9d50
0x000000000250a120:   000000001492bc50 0000000000000000
0x000000000250a130:   00000000000003f8 00000000114c0000
0x000000000250a140:   0000000002605000 000000000250a268
0x000000000250a150:   00000000026051f8 00007ffb665bdd13 

Instructions: (pc=0x000000006a065ed2)
0x000000006a065eb2:   89 5c 24 20 48 89 74 24 28 48 39 73 08 74 0a 48
0x000000006a065ec2:   8d 4c 24 20 e8 45 7a 13 00 40 38 35 9e da 6c 00
0x000000006a065ed2:   48 8b 3f 48 63 05 f8 39 6b 00 74 1b 8b 0c 38 85
0x000000006a065ee2:   c9 74 7c 8b c1 8b 0d 6b 09 66 00 48 d3 e0 48 03 


Register to memory mapping:

RAX=0x0000000000000000 is an unknown value
RBX=0x0000000002605000 is a thread
RCX=0x0000000002605000 is a thread
RDX=0x00000000f27ebc48 is an oop
java.lang.StackOverflowError 
 - klass: 'java/lang/StackOverflowError'
RSP=0x000000000250a060 is pointing into the stack for thread: 0x0000000002605000
RBP=0x000000000250a160 is pointing into the stack for thread: 0x0000000002605000
RSI=0x0000000000000000 is an unknown value
RDI=0x0000000000000000 is an unknown value
R8 =0x000000000250a160 is pointing into the stack for thread: 0x0000000002605000
R9 =0x000000000250a0f8 is pointing into the stack for thread: 0x0000000002605000
R10=0x0000000000000000 is an unknown value
R11=0x0000000000000246 is an unknown value
R12=0x0000000000000000 is an unknown value
R13=0x0000000000000000 is an unknown value
R14=0x00000000026051f8 is an unknown value
R15=0x000000000250a260 is pointing into the stack for thread: 0x0000000002605000


Stack: [0x0000000002500000,0x0000000002600000],  sp=0x000000000250a060,  free space=40k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x145ed2]
C  [JniInchi-1.03_1-WINDOWS-AMD64.dll+0xbdc09]
C  [JniInchi-1.03_1-WINDOWS-AMD64.dll+0xbdd13]
C  0x0000000002718c67

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  net.sf.jniinchi.JniInchiWrapper.GetINCHI(Lnet/sf/jniinchi/JniInchiInput;)Lnet/sf/jniinchi/JniInchiOutput;+0
j  net.sf.jniinchi.JniInchiWrapper.getInchi(Lnet/sf/jniinchi/JniInchiInput;)Lnet/sf/jniinchi/JniInchiOutput;+25
J 1279 C1 org.openscience.cdk.inchi.InChIGenerator.generateInchiFromCDKAtomContainer(Lorg/openscience/cdk/interfaces/IAtomContainer;Z)V (1993 bytes) @ 0x0000000002b8f15c [0x0000000002b85720+0x9a3c]
j  org.openscience.cdk.inchi.InChIGenerator.<init>(Lorg/openscience/cdk/interfaces/IAtomContainer;Ljava/util/List;Z)V+19
j  org.openscience.cdk.inchi.InChIGenerator.<init>(Lorg/openscience/cdk/interfaces/IAtomContainer;Z)V+9
j  org.openscience.cdk.inchi.InChIGeneratorFactory.getInChIGenerator(Lorg/openscience/cdk/interfaces/IAtomContainer;)Lorg/openscience/cdk/inchi/InChIGenerator;+9
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.inchiGeneration(Lorg/openscience/cdk/interfaces/IAtomContainer;)Ljava/lang/String;+4
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbf134 [0x0000000002bbeb00+0x634]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc34 [0x0000000002bbeb00+0x1134]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0320 [0x0000000002bbeb00+0x1820]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc009c [0x0000000002bbeb00+0x159c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbfc1c [0x0000000002bbeb00+0x111c]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bbef50 [0x0000000002bbeb00+0x450]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
J 1280 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002bc0338 [0x0000000002bbeb00+0x1838]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
J 1190 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I (114 bytes) @ 0x0000000002b46684 [0x0000000002b45e00+0x884]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b347f4 [0x0000000002b335c0+0x1234]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1165 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I (200 bytes) @ 0x0000000002b34834 [0x0000000002b335c0+0x1274]
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2d4 [0x0000000002b2e240+0x94]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1166 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I (18 bytes) @ 0x0000000002b2e2fc [0x0000000002b2e240+0xbc]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f0ac [0x0000000002b1cc20+0x248c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f03c [0x0000000002b1cc20+0x241c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
J 1129 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I (292 bytes) @ 0x0000000002b1f074 [0x0000000002b1cc20+0x2454]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+196
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+251
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;Z)[[I+187
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+14
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+288
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;Z)[[I+275
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;Z)[[I+110
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.nextStep([[ILjava/util/ArrayList;Z)[[I+7
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.genDemo(Ljava/util/ArrayList;)[[I+73
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.canonicalBlockbasedGeneratorDemo(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;IILjava/lang/String;)V+107
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.main([Ljava/lang/String;)V+190
v  ~StubRoutines::call_stub

---------------  P R O C E S S  ---------------

Java Threads: ( => current thread )
  0x0000000016644000 JavaThread "Java2D Disposer" daemon [_thread_blocked, id=20340, stack(0x0000000018740000,0x0000000018840000)]
  0x0000000016663800 JavaThread "Service Thread" daemon [_thread_blocked, id=27780, stack(0x0000000016b30000,0x0000000016c30000)]
  0x0000000016645000 JavaThread "C1 CompilerThread2" daemon [_thread_blocked, id=13988, stack(0x0000000016a30000,0x0000000016b30000)]
  0x0000000014dd7800 JavaThread "C2 CompilerThread1" daemon [_thread_blocked, id=10780, stack(0x0000000016530000,0x0000000016630000)]
  0x0000000014dd1800 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=25608, stack(0x0000000016430000,0x0000000016530000)]
  0x0000000014dcf000 JavaThread "Attach Listener" daemon [_thread_blocked, id=804, stack(0x0000000016330000,0x0000000016430000)]
  0x0000000014dce000 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=24176, stack(0x0000000016230000,0x0000000016330000)]
  0x00000000026fe000 JavaThread "Finalizer" daemon [_thread_blocked, id=17164, stack(0x0000000016030000,0x0000000016130000)]
  0x00000000026f5000 JavaThread "Reference Handler" daemon [_thread_blocked, id=17376, stack(0x0000000015f30000,0x0000000016030000)]
=>0x0000000002605000 JavaThread "main" [_thread_in_vm, id=27568, stack(0x0000000002500000,0x0000000002600000)]

Other Threads:
  0x0000000014d97000 VMThread [stack: 0x0000000015e30000,0x0000000015f30000] [id=26876]
  0x0000000016665000 WatcherThread [stack: 0x0000000016c30000,0x0000000016d30000] [id=20656]

VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap:
 PSYoungGen      total 153088K, used 128733K [0x00000000eab00000, 0x00000000f5580000, 0x0000000100000000)
  eden space 131584K, 97% used [0x00000000eab00000,0x00000000f28b7408,0x00000000f2b80000)
  from space 21504K, 0% used [0x00000000f4080000,0x00000000f4080000,0x00000000f5580000)
  to   space 21504K, 0% used [0x00000000f2b80000,0x00000000f2b80000,0x00000000f4080000)
 ParOldGen       total 349696K, used 0K [0x00000000c0000000, 0x00000000d5580000, 0x00000000eab00000)
  object space 349696K, 0% used [0x00000000c0000000,0x00000000c0000000,0x00000000d5580000)
 Metaspace       used 14227K, capacity 14408K, committed 14592K, reserved 1062912K
  class space    used 1670K, capacity 1730K, committed 1792K, reserved 1048576K

Card table byte_map: [0x0000000011ac0000,0x0000000011cd0000] byte_map_base: 0x00000000114c0000

Marking Bits: (ParMarkBitMap*) 0x000000006a742d00
 Begin Bits: [0x0000000012230000, 0x0000000013230000)
 End Bits:   [0x0000000013230000, 0x0000000014230000)

Polling page: 0x0000000000870000

CodeCache: size=245760Kb used=5058Kb max_used=5073Kb free=240701Kb
 bounds [0x0000000002700000, 0x0000000002c00000, 0x0000000011700000]
 total_blobs=1883 nmethods=1371 adapters=424
 compilation: enabled

Compilation events (10 events):
Event: 2.897 Thread 0x0000000016645000 1369       3       AlgorithmicGroupTheory.canonicalBlockwiseTest::allIs0 (39 bytes)
Event: 2.897 Thread 0x0000000016645000 nmethod 1369 0x0000000002bbb1d0 code [0x0000000002bbb3a0, 0x0000000002bbba18]
Event: 2.900 Thread 0x0000000016645000 1370       3       java.util.ArrayList::addAll (54 bytes)
Event: 2.900 Thread 0x0000000016645000 nmethod 1370 0x0000000002bf3990 code [0x0000000002bf3b40, 0x0000000002bf4228]
Event: 2.901 Thread 0x0000000014dd7800 nmethod 1365 0x0000000002bf44d0 code [0x0000000002bf46a0, 0x0000000002bf52b8]
Event: 2.901 Thread 0x0000000014dd7800 1366       4       org.openscience.cdk.Element::getSymbol (36 bytes)
Event: 2.903 Thread 0x0000000014dd7800 nmethod 1366 0x0000000002bcd690 code [0x0000000002bcd7e0, 0x0000000002bcd8d8]
Event: 2.909 Thread 0x0000000014dd7800 1371       4       org.openscience.cdk.Bond::hashCode (5 bytes)
Event: 2.909 Thread 0x0000000014dd7800 nmethod 1371 0x0000000002bcd3d0 code [0x0000000002bcd520, 0x0000000002bcd5c8]
Event: 2.912 Thread 0x0000000014dd1800 nmethod 1364 0x0000000002bf0310 code [0x0000000002bf0540, 0x0000000002bf1338]

GC Heap History (0 events):
No events

Deoptimization events (10 events):
Event: 0.901 Thread 0x0000000002605000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000000029bf0f4 method=sun.misc.FloatingDecimal$ASCIIToBinaryBuffer.doubleValue()D @ 149
Event: 0.928 Thread 0x0000000002605000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000000029d904c method=sun.misc.FloatingDecimal.readJavaFormatString(Ljava/lang/String;)Lsun/misc/FloatingDecimal$ASCIIToBinaryConverter; @ 169
Event: 0.941 Thread 0x0000000002605000 Uncommon trap: reason=predicate action=maybe_recompile pc=0x00000000029e5e08 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 49
Event: 0.995 Thread 0x0000000002605000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000029fce6c method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.996 Thread 0x0000000002605000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000029fce6c method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.996 Thread 0x0000000002605000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000029fce6c method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.996 Thread 0x0000000002605000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000029fce6c method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 1.161 Thread 0x0000000002605000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000000288a060 method=java.lang.String.indexOf([CII[CIII)I @ 3
Event: 1.381 Thread 0x0000000002605000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000000002993054 method=java.io.WinNTFileSystem.normalize(Ljava/lang/String;)Ljava/lang/String; @ 128
Event: 2.219 Thread 0x0000000002605000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000000002affba8 method=com.sun.imageio.plugins.png.PNGImageWriter.encodePass(Ljavax/imageio/stream/ImageOutputStream;Ljava/awt/image/RenderedImage;IIII)V @ 303

Classes redefined (0 events):
No events

Internal exceptions (10 events):
Event: 0.469 Thread 0x0000000002605000 Exception <a 'java/lang/ClassNotFoundException': org/apache/log4j/LayoutCustomizer> (0x00000000eb54c118) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\classfile\systemDictionary.cpp, line 210]
Event: 0.470 Thread 0x0000000002605000 Exception <a 'java/lang/ClassNotFoundException': org/apache/log4j/PatternLayoutCustomizer> (0x00000000eb56a110) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\classfile\systemDictionary.cpp, line 210]
Event: 0.735 Thread 0x0000000002605000 Exception <a 'java/io/FileNotFoundException'> (0x00000000ebc612f0) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\jni.cpp, line 709]
Event: 0.781 Thread 0x0000000002605000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x00000000ebd30118) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\methodHandles.cpp, line 1167]
Event: 0.784 Thread 0x0000000002605000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x00000000ebd3dbd8) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\methodHandles.cpp, line 1167]
Event: 1.118 Thread 0x0000000002605000 Exception <a 'java/io/FileNotFoundException'> (0x00000000ed36d318) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\jni.cpp, line 709]
Event: 2.911 Thread 0x0000000002605000 Exception <a 'java/lang/StackOverflowError'> (0x00000000f27e04e8) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.911 Thread 0x0000000002605000 Exception <a 'java/lang/StackOverflowError'> (0x00000000f27e4208) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.911 Thread 0x0000000002605000 Exception <a 'java/lang/StackOverflowError'> (0x00000000f27e7f28) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.912 Thread 0x0000000002605000 Exception <a 'java/lang/StackOverflowError'> (0x00000000f27ebc48) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]

Events (10 events):
Event: 2.219 Thread 0x0000000002605000 DEOPT PACKING pc=0x0000000002affba8 sp=0x00000000025f61a0
Event: 2.219 Thread 0x0000000002605000 DEOPT UNPACKING pc=0x000000000274583b sp=0x00000000025f61c0 mode 2
Event: 2.347 loading class org/openscience/cdk/tools/LoggingTool
Event: 2.347 loading class org/openscience/cdk/tools/LoggingTool done
Event: 2.516 loading class org/openscience/cdk/graph/BitMatrix
Event: 2.516 loading class org/openscience/cdk/graph/BitMatrix done
Event: 2.552 loading class org/openscience/cdk/tools/LoggingTool
Event: 2.552 loading class org/openscience/cdk/tools/LoggingTool done
Event: 2.571 Thread 0x0000000002605000 DEOPT PACKING pc=0x0000000002b76db8 sp=0x000000000253cd90
Event: 2.571 Thread 0x0000000002605000 DEOPT UNPACKING pc=0x0000000002747890 sp=0x000000000253cb10 mode 0


Dynamic libraries:
0x00007ff785970000 - 0x00007ff7859a7000 	C:\Program Files\Java\jdk1.8.0_181\bin\javaw.exe
0x00007ffb99920000 - 0x00007ffb99b10000 	C:\WINDOWS\SYSTEM32\ntdll.dll
0x00007ffb98c50000 - 0x00007ffb98d02000 	C:\WINDOWS\System32\KERNEL32.DLL
0x00007ffb97350000 - 0x00007ffb975f5000 	C:\WINDOWS\System32\KERNELBASE.dll
0x00007ffb97ad0000 - 0x00007ffb97b73000 	C:\WINDOWS\System32\ADVAPI32.dll
0x00007ffb97a30000 - 0x00007ffb97ace000 	C:\WINDOWS\System32\msvcrt.dll
0x00007ffb995d0000 - 0x00007ffb99667000 	C:\WINDOWS\System32\sechost.dll
0x00007ffb98ab0000 - 0x00007ffb98bd0000 	C:\WINDOWS\System32\RPCRT4.dll
0x00007ffb98490000 - 0x00007ffb98625000 	C:\WINDOWS\System32\USER32.dll
0x00007ffb979a0000 - 0x00007ffb979c1000 	C:\WINDOWS\System32\win32u.dll
0x00007ffb98d10000 - 0x00007ffb98d36000 	C:\WINDOWS\System32\GDI32.dll
0x00007ffb968b0000 - 0x00007ffb96a46000 	C:\WINDOWS\System32\gdi32full.dll
0x00007ffb976b0000 - 0x00007ffb9774e000 	C:\WINDOWS\System32\msvcp_win.dll
0x00007ffb978a0000 - 0x00007ffb9799a000 	C:\WINDOWS\System32\ucrtbase.dll
0x00007ffb7dd80000 - 0x00007ffb7e004000 	C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.18362.1082_none_9e8193e1e45b25c1\COMCTL32.dll
0x00007ffb98ea0000 - 0x00007ffb991d5000 	C:\WINDOWS\System32\combase.dll
0x00007ffb97800000 - 0x00007ffb97880000 	C:\WINDOWS\System32\bcryptPrimitives.dll
0x00007ffb99320000 - 0x00007ffb9934e000 	C:\WINDOWS\System32\IMM32.DLL
0x000000006a7d0000 - 0x000000006a8a2000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\msvcr100.dll
0x0000000069f20000 - 0x000000006a7c2000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\server\jvm.dll
0x00007ffb98630000 - 0x00007ffb98638000 	C:\WINDOWS\System32\PSAPI.DLL
0x00007ffb8a600000 - 0x00007ffb8a609000 	C:\WINDOWS\SYSTEM32\WSOCK32.dll
0x00007ffb99560000 - 0x00007ffb995cf000 	C:\WINDOWS\System32\WS2_32.dll
0x00007ffb869e0000 - 0x00007ffb86a04000 	C:\WINDOWS\SYSTEM32\WINMM.dll
0x00007ffb7db80000 - 0x00007ffb7db8a000 	C:\WINDOWS\SYSTEM32\VERSION.dll
0x00007ffb869b0000 - 0x00007ffb869dd000 	C:\WINDOWS\SYSTEM32\WINMMBASE.dll
0x00007ffb97660000 - 0x00007ffb976aa000 	C:\WINDOWS\System32\cfgmgr32.dll
0x0000000069f10000 - 0x0000000069f1f000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\verify.dll
0x0000000069ee0000 - 0x0000000069f09000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\java.dll
0x0000000069ec0000 - 0x0000000069ed6000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\zip.dll
0x00007ffb97c60000 - 0x00007ffb98347000 	C:\WINDOWS\System32\SHELL32.dll
0x00007ffb99830000 - 0x00007ffb998d9000 	C:\WINDOWS\System32\shcore.dll
0x00007ffb96a50000 - 0x00007ffb971d0000 	C:\WINDOWS\System32\windows.storage.dll
0x00007ffb96860000 - 0x00007ffb96883000 	C:\WINDOWS\System32\profapi.dll
0x00007ffb96810000 - 0x00007ffb9685a000 	C:\WINDOWS\System32\powrprof.dll
0x00007ffb967e0000 - 0x00007ffb967f0000 	C:\WINDOWS\System32\UMPDC.dll
0x00007ffb99500000 - 0x00007ffb99552000 	C:\WINDOWS\System32\shlwapi.dll
0x00007ffb967f0000 - 0x00007ffb96801000 	C:\WINDOWS\System32\kernel.appcore.dll
0x00007ffb97880000 - 0x00007ffb97897000 	C:\WINDOWS\System32\cryptsp.dll
0x00007ffb66500000 - 0x00007ffb66604000 	C:\Users\mehme\.jnati\repo\jniinchi\1.03_1\WINDOWS-AMD64\JniInchi-1.03_1-WINDOWS-AMD64.dll
0x0000000069d20000 - 0x0000000069eb9000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\awt.dll
0x00007ffb99760000 - 0x00007ffb99825000 	C:\WINDOWS\System32\OLEAUT32.dll
0x00007ffb94a40000 - 0x00007ffb94acf000 	C:\WINDOWS\SYSTEM32\apphelp.dll
0x0000000069cd0000 - 0x0000000069d17000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\fontmanager.dll
0x0000000069cb0000 - 0x0000000069cca000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\net.dll
0x00007ffb96030000 - 0x00007ffb96097000 	C:\WINDOWS\system32\mswsock.dll
0x0000000069c90000 - 0x0000000069ca1000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\nio.dll
0x0000000069c40000 - 0x0000000069c82000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\t2k.dll
0x00007ffb94e50000 - 0x00007ffb94e7d000 	C:\WINDOWS\system32\DWMAPI.DLL
0x00007ffb94af0000 - 0x00007ffb94b89000 	C:\WINDOWS\system32\uxtheme.dll
0x0000000069c10000 - 0x0000000069c3a000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\dcpr.dll
0x00007ffb95b40000 - 0x00007ffb95b73000 	C:\WINDOWS\system32\rsaenh.dll
0x00007ffb971d0000 - 0x00007ffb971f6000 	C:\WINDOWS\System32\bcrypt.dll
0x00007ffb96700000 - 0x00007ffb96725000 	C:\WINDOWS\SYSTEM32\USERENV.dll
0x00007ffb96200000 - 0x00007ffb9620c000 	C:\WINDOWS\SYSTEM32\CRYPTBASE.dll
0x00007ffb95d40000 - 0x00007ffb95d7a000 	C:\WINDOWS\SYSTEM32\IPHLPAPI.DLL
0x00007ffb983d0000 - 0x00007ffb983d8000 	C:\WINDOWS\System32\NSI.dll
0x00007ffb8b340000 - 0x00007ffb8b356000 	C:\WINDOWS\SYSTEM32\dhcpcsvc6.DLL
0x00007ffb8b8f0000 - 0x00007ffb8b90c000 	C:\WINDOWS\SYSTEM32\dhcpcsvc.DLL
0x00007ffb95d80000 - 0x00007ffb95e4b000 	C:\WINDOWS\SYSTEM32\DNSAPI.dll
0x00007ffb93250000 - 0x00007ffb93444000 	C:\WINDOWS\SYSTEM32\dbghelp.dll

VM Arguments:
jvm_args: -Xms512M -Xmx1024M -Dfile.encoding=Cp1252 
java_command: AlgorithmicGroupTheory.canonicalBlockwiseTest
java_class_path (initial): C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;C:\Users\mehme\eclipse-workspace\AlgorithmicGroupTheory\target\classes;C:\Users\mehme\Desktop\Current\cdk-2.3.jar;C:\Users\mehme\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mehme\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-data\2.3\cdk-data-2.3.jar;C:\Users\mehme\.m2\repository\javax\vecmath\vecmath\1.5.2\vecmath-1.5.2.jar;C:\Users\mehme\.m2\repository\com\google\guava\guava\17.0\guava-17.0.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-ioformats\2.3\cdk-ioformats-2.3.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-qsarmolecular\2.3\cdk-qsarmolecular-2.3.jar;C:\Users\mehme\.m2\repository\gov\nist\math\jama\1.0.3\jama-1.0.3.jar;C:\Users\mehme\.m2\repository\xom\xom\1.2.5\xom-1.2.5.jar;C:\Users\mehme\.m2\repository\xml-apis\xml-apis\1.3.03\xml-apis-1.3.03.jar;C:\Users\mehme\.m2\repository\xerces\xercesImpl\2.
Launcher Type: SUN_STANDARD

Environment Variables:
JAVA_HOME=C:\Program Files\Java\jdk-10.0.2
CLASSPATH=C:\Program Files (x86)\Novosoft\C2J\Bin\c2jruntime.zip;
PATH=C:/Program Files/Java/jdk-10.0.2/bin/server;C:/Program Files/Java/jdk-10.0.2/bin;C:\ProgramData\Boxstarter;C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;\;\Scripts\;C:\Python27\Scripts\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\bin;C:\Users\mehme\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Python3.7;C:\Users\mehme\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\mehme\AppData\Local\Programs\Python\Python37\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files (x86)\Novosoft\C2J\Bin;C:\Program Files\OpenBabel-2.4.1;C:\Users\mehme\AppData\Local\Microsoft\WindowsApps;C:\Users\mehme\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Users\mehme\AppData\Roaming\npm;C:\Users\mehme\AppData\Local\Microsoft\WindowsApps;C:\Users\mehme\AppData\Local\Programs\Microsoft VS Code\bin;C:\WINDOWS\System32;
USERNAME=mehme
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 142 Stepping 9, GenuineIntel



---------------  S Y S T E M  ---------------

OS: Windows 10.0 , 64 bit Build 18362 (10.0.18362.1082)

CPU:total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 142 stepping 9, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, avx, avx2, aes, clmul, erms, rtm, 3dnowpref, lzcnt, ht, tsc, tscinvbit, bmi1, bmi2, adx

Memory: 4k page, physical 16696792k(8273452k free), swap 19187160k(6514844k free)

vm_info: Java HotSpot(TM) 64-Bit Server VM (25.181-b13) for windows-amd64 JRE (1.8.0_181-b13), built on Jul  7 2018 04:01:33 by "java_re" with MS VC++ 10.0 (VS2010)

time: Mon Sep 14 17:24:50 2020
elapsed time: 3 seconds (0d 0h 0m 3s)

