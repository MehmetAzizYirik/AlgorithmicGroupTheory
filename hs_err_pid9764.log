#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000000006a045ed2, pid=9764, tid=0x00000000000020d0
#
# JRE version: Java(TM) SE Runtime Environment (8.0_181-b13) (build 1.8.0_181-b13)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.181-b13 mixed mode windows-amd64 compressed oops)
# Problematic frame:
# V  [jvm.dll+0x145ed2]
#
# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#

---------------  T H R E A D  ---------------

Current thread (0x00000000023b5000):  JavaThread "main" [_thread_in_vm, id=8400, stack(0x00000000022b0000,0x00000000023b0000)]

siginfo: ExceptionCode=0xc0000005, reading address 0x0000000000000000

Registers:
RAX=0x0000000000000000, RBX=0x00000000023b5000, RCX=0x00000000023b5000, RDX=0x000000076edc08a8
RSP=0x00000000022ba0b0, RBP=0x00000000022ba1b0, RSI=0x0000000000000000, RDI=0x0000000000000000
R8 =0x00000000022ba1b0, R9 =0x00000000022ba148, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x00000000023b51f8, R15=0x00000000022ba2b0
RIP=0x000000006a045ed2, EFLAGS=0x0000000000010202

Top of Stack: (sp=0x00000000022ba0b0)
0x00000000022ba0b0:   000000000062ea90 0000000000000182
0x00000000022ba0c0:   000000006a521830 000000006a50a668
0x00000000022ba0d0:   00000000023b5000 000000000062ea90
0x00000000022ba0e0:   0000000000000182 000000006a521830
0x00000000022ba0f0:   00000000022ba148 00007ffb7335f0bb
0x00000000022ba100:   0000000000000002 0000000000000000
0x00000000022ba110:   000000001e247f90 000000001e247f80
0x00000000022ba120:   000000001e247f90 00007ffb7335dc09
0x00000000022ba130:   000000001e247f80 0000000000000000
0x00000000022ba140:   000000001dbaa0e0 0000000000000000
0x00000000022ba150:   0000000000000000 0000000000000000
0x00000000022ba160:   000000001e247f90 000000001e247f80
0x00000000022ba170:   000000001b629a30 0000000000000000
0x00000000022ba180:   0000000000000250 000000000e267000
0x00000000022ba190:   00000000023b5000 00000000022ba2b8
0x00000000022ba1a0:   00000000023b51f8 00007ffb7335dd13 

Instructions: (pc=0x000000006a045ed2)
0x000000006a045eb2:   89 5c 24 20 48 89 74 24 28 48 39 73 08 74 0a 48
0x000000006a045ec2:   8d 4c 24 20 e8 45 7a 13 00 40 38 35 9e da 6c 00
0x000000006a045ed2:   48 8b 3f 48 63 05 f8 39 6b 00 74 1b 8b 0c 38 85
0x000000006a045ee2:   c9 74 7c 8b c1 8b 0d 6b 09 66 00 48 d3 e0 48 03 


Register to memory mapping:

RAX=0x0000000000000000 is an unknown value
RBX=0x00000000023b5000 is a thread
RCX=0x00000000023b5000 is a thread
RDX=0x000000076edc08a8 is an oop
java.lang.StackOverflowError 
 - klass: 'java/lang/StackOverflowError'
RSP=0x00000000022ba0b0 is pointing into the stack for thread: 0x00000000023b5000
RBP=0x00000000022ba1b0 is pointing into the stack for thread: 0x00000000023b5000
RSI=0x0000000000000000 is an unknown value
RDI=0x0000000000000000 is an unknown value
R8 =0x00000000022ba1b0 is pointing into the stack for thread: 0x00000000023b5000
R9 =0x00000000022ba148 is pointing into the stack for thread: 0x00000000023b5000
R10=0x0000000000000000 is an unknown value
R11=0x0000000000000246 is an unknown value
R12=0x0000000000000000 is an unknown value
R13=0x0000000000000000 is an unknown value
R14=0x00000000023b51f8 is an unknown value
R15=0x00000000022ba2b0 is pointing into the stack for thread: 0x00000000023b5000


Stack: [0x00000000022b0000,0x00000000023b0000],  sp=0x00000000022ba0b0,  free space=40k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x145ed2]
C  [JniInchi-1.03_1-WINDOWS-AMD64.dll+0xbdc09]
C  [JniInchi-1.03_1-WINDOWS-AMD64.dll+0xbdd13]
C  0x00000000024c8c67

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  net.sf.jniinchi.JniInchiWrapper.GetINCHI(Lnet/sf/jniinchi/JniInchiInput;)Lnet/sf/jniinchi/JniInchiOutput;+0
j  net.sf.jniinchi.JniInchiWrapper.getInchi(Lnet/sf/jniinchi/JniInchiInput;)Lnet/sf/jniinchi/JniInchiOutput;+25
J 1325 C1 org.openscience.cdk.inchi.InChIGenerator.generateInchiFromCDKAtomContainer(Lorg/openscience/cdk/interfaces/IAtomContainer;Z)V (1993 bytes) @ 0x000000000295b05c [0x00000000029514a0+0x9bbc]
j  org.openscience.cdk.inchi.InChIGenerator.<init>(Lorg/openscience/cdk/interfaces/IAtomContainer;Ljava/util/List;Z)V+19
j  org.openscience.cdk.inchi.InChIGenerator.<init>(Lorg/openscience/cdk/interfaces/IAtomContainer;Z)V+9
j  org.openscience.cdk.inchi.InChIGeneratorFactory.getInChIGenerator(Lorg/openscience/cdk/interfaces/IAtomContainer;)Lorg/openscience/cdk/inchi/InChIGenerator;+9
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.inchiGeneration(Lorg/openscience/cdk/interfaces/IAtomContainer;)Ljava/lang/String;+4
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297a18c [0x0000000002979ae0+0x6ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aec8 [0x0000000002979ae0+0x13e8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aabc [0x0000000002979ae0+0xfdc]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x0000000002979fb8 [0x0000000002979ae0+0x4d8]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1327 C2 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x000000000297aee0 [0x0000000002979ae0+0x1400]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
J 1238 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V (104 bytes) @ 0x000000000291ebac [0x000000000291e300+0x8ac]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915df4 [0x00000000029147c0+0x1634]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
J 1236 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V (196 bytes) @ 0x0000000002915d2c [0x00000000029147c0+0x156c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef304 [0x00000000028ec3a0+0x2f64]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef24c [0x00000000028ec3a0+0x2eac]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
J 1177 C1 AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V (326 bytes) @ 0x00000000028ef2bc [0x00000000028ec3a0+0x2f1c]
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+192
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+291
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.backwardDemo([[ILjava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+322
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardSub(IIIII[[ILjava/util/ArrayList;)V+312
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.forwardDemo([[ILjava/util/ArrayList;)V+100
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.gen(Ljava/util/ArrayList;)V+184
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.canonicalBlockbasedGenerator(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)V+128
j  AlgorithmicGroupTheory.canonicalBlockwiseTest.main([Ljava/lang/String;)V+1089
v  ~StubRoutines::call_stub

---------------  P R O C E S S  ---------------

Java Threads: ( => current thread )
  0x000000001dfe6000 JavaThread "Java2D Disposer" daemon [_thread_blocked, id=912, stack(0x000000001f6a0000,0x000000001f7a0000)]
  0x000000001d479000 JavaThread "Service Thread" daemon [_thread_blocked, id=5648, stack(0x000000001d830000,0x000000001d930000)]
  0x000000001baeb000 JavaThread "C1 CompilerThread2" daemon [_thread_blocked, id=11040, stack(0x000000001d330000,0x000000001d430000)]
  0x000000001badf000 JavaThread "C2 CompilerThread1" daemon [_thread_in_native, id=21384, stack(0x000000001d230000,0x000000001d330000)]
  0x000000001bad4000 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=16460, stack(0x000000001d130000,0x000000001d230000)]
  0x000000001bad2000 JavaThread "Attach Listener" daemon [_thread_blocked, id=4576, stack(0x000000001d030000,0x000000001d130000)]
  0x000000001bad1000 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=14116, stack(0x000000001cf30000,0x000000001d030000)]
  0x00000000024ae800 JavaThread "Finalizer" daemon [_thread_blocked, id=20680, stack(0x000000001cd30000,0x000000001ce30000)]
  0x00000000024a5000 JavaThread "Reference Handler" daemon [_thread_blocked, id=21164, stack(0x000000001cc30000,0x000000001cd30000)]
=>0x00000000023b5000 JavaThread "main" [_thread_in_vm, id=8400, stack(0x00000000022b0000,0x00000000023b0000)]

Other Threads:
  0x000000001ba97000 VMThread [stack: 0x000000001cb30000,0x000000001cc30000] [id=10520]
  0x000000001d482000 WatcherThread [stack: 0x000000001d930000,0x000000001da30000] [id=17760]

VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap:
 PSYoungGen      total 76288K, used 72974K [0x000000076b100000, 0x0000000770600000, 0x00000007c0000000)
  eden space 65536K, 94% used [0x000000076b100000,0x000000076edc89e8,0x000000076f100000)
  from space 10752K, 99% used [0x000000076f100000,0x000000076fb7aea0,0x000000076fb80000)
  to   space 10752K, 0% used [0x000000076fb80000,0x000000076fb80000,0x0000000770600000)
 ParOldGen       total 175104K, used 8853K [0x00000006c1200000, 0x00000006cbd00000, 0x000000076b100000)
  object space 175104K, 5% used [0x00000006c1200000,0x00000006c1aa57b8,0x00000006cbd00000)
 Metaspace       used 14244K, capacity 14392K, committed 14592K, reserved 1062912K
  class space    used 1670K, capacity 1730K, committed 1792K, reserved 1048576K

Card table byte_map: [0x0000000011870000,0x0000000012070000] byte_map_base: 0x000000000e267000

Marking Bits: (ParMarkBitMap*) 0x000000006a722d00
 Begin Bits: [0x00000000129c0000, 0x0000000016978000)
 End Bits:   [0x0000000016978000, 0x000000001a930000)

Polling page: 0x00000000001b0000

CodeCache: size=245760Kb used=5076Kb max_used=5088Kb free=240684Kb
 bounds [0x00000000024b0000, 0x00000000029b0000, 0x00000000114b0000]
 total_blobs=1907 nmethods=1396 adapters=423
 compilation: enabled

Compilation events (10 events):
Event: 2.145 Thread 0x000000001baeb000 nmethod 1389 0x0000000002974490 code [0x0000000002974680, 0x0000000002974f38]
Event: 2.145 Thread 0x000000001baeb000 1391       3       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
Event: 2.145 Thread 0x000000001baeb000 nmethod 1391 0x0000000002981750 code [0x00000000029818a0, 0x0000000002981a10]
Event: 2.145 Thread 0x000000001baeb000 1390       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
Event: 2.145 Thread 0x000000001baeb000 nmethod 1390 0x00000000029741d0 code [0x0000000002974320, 0x0000000002974430]
Event: 2.148 Thread 0x000000001baeb000 1392       3       org.openscience.cdk.tools.manipulator.AtomContainerManipulator::suppressHydrogens (1920 bytes)
Event: 2.151 Thread 0x000000001bad4000 nmethod 1388 0x0000000002985050 code [0x00000000029851c0, 0x0000000002985598]
Event: 2.151 Thread 0x000000001bad4000 1393       4       org.openscience.cdk.AtomContainer2$BondIterator::next (5 bytes)
Event: 2.152 Thread 0x000000001bad4000 nmethod 1393 0x0000000002982090 code [0x00000000029821c0, 0x0000000002982278]
Event: 2.152 Thread 0x000000001bad4000 1394       4       org.openscience.cdk.AtomContainer2::newBondRef (110 bytes)

GC Heap History (2 events):
Event: 1.515 GC heap before
{Heap before GC invocations=1 (full 0):
 PSYoungGen      total 76288K, used 65536K [0x000000076b100000, 0x0000000770600000, 0x00000007c0000000)
  eden space 65536K, 100% used [0x000000076b100000,0x000000076f100000,0x000000076f100000)
  from space 10752K, 0% used [0x000000076fb80000,0x000000076fb80000,0x0000000770600000)
  to   space 10752K, 0% used [0x000000076f100000,0x000000076f100000,0x000000076fb80000)
 ParOldGen       total 175104K, used 0K [0x00000006c1200000, 0x00000006cbd00000, 0x000000076b100000)
  object space 175104K, 0% used [0x00000006c1200000,0x00000006c1200000,0x00000006cbd00000)
 Metaspace       used 14033K, capacity 14182K, committed 14592K, reserved 1062912K
  class space    used 1667K, capacity 1727K, committed 1792K, reserved 1048576K
Event: 1.524 GC heap after
Heap after GC invocations=1 (full 0):
 PSYoungGen      total 76288K, used 10731K [0x000000076b100000, 0x0000000770600000, 0x00000007c0000000)
  eden space 65536K, 0% used [0x000000076b100000,0x000000076b100000,0x000000076f100000)
  from space 10752K, 99% used [0x000000076f100000,0x000000076fb7aea0,0x000000076fb80000)
  to   space 10752K, 0% used [0x000000076fb80000,0x000000076fb80000,0x0000000770600000)
 ParOldGen       total 175104K, used 8853K [0x00000006c1200000, 0x00000006cbd00000, 0x000000076b100000)
  object space 175104K, 5% used [0x00000006c1200000,0x00000006c1aa57b8,0x00000006cbd00000)
 Metaspace       used 14033K, capacity 14182K, committed 14592K, reserved 1062912K
  class space    used 1667K, capacity 1727K, committed 1792K, reserved 1048576K
}

Deoptimization events (10 events):
Event: 0.919 Thread 0x00000000023b5000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000000027a530c method=sun.misc.FloatingDecimal.readJavaFormatString(Ljava/lang/String;)Lsun/misc/FloatingDecimal$ASCIIToBinaryConverter; @ 169
Event: 0.928 Thread 0x00000000023b5000 Uncommon trap: reason=predicate action=maybe_recompile pc=0x00000000027af264 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 49
Event: 0.946 Thread 0x00000000023b5000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000000027a988c method=java.util.HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node; @ 129
Event: 0.967 Thread 0x00000000023b5000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000027c76c0 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.967 Thread 0x00000000023b5000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000027c76c0 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.967 Thread 0x00000000023b5000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000027c76c0 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 0.967 Thread 0x00000000023b5000 Uncommon trap: reason=array_check action=maybe_recompile pc=0x00000000027c76c0 method=java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object; @ 119
Event: 1.077 Thread 0x00000000023b5000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000000263d8a8 method=java.lang.String.indexOf([CII[CIII)I @ 3
Event: 1.213 Thread 0x00000000023b5000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000000002758c90 method=java.io.WinNTFileSystem.normalize(Ljava/lang/String;)Ljava/lang/String; @ 128
Event: 1.559 Thread 0x00000000023b5000 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000000028b2204 method=com.sun.imageio.plugins.png.PNGImageWriter.encodePass(Ljavax/imageio/stream/ImageOutputStream;Ljava/awt/image/RenderedImage;IIII)V @ 303

Classes redefined (0 events):
No events

Internal exceptions (10 events):
Event: 0.448 Thread 0x00000000023b5000 Exception <a 'java/lang/ClassNotFoundException': org/apache/log4j/LayoutCustomizer> (0x000000076ba05bc0) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\classfile\systemDictionary.cpp, line 210]
Event: 0.450 Thread 0x00000000023b5000 Exception <a 'java/lang/ClassNotFoundException': org/apache/log4j/PatternLayoutCustomizer> (0x000000076ba237e8) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\classfile\systemDictionary.cpp, line 210]
Event: 0.757 Thread 0x00000000023b5000 Exception <a 'java/io/FileNotFoundException'> (0x000000076c10f728) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\jni.cpp, line 709]
Event: 0.797 Thread 0x00000000023b5000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x000000076c1de4c0) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\methodHandles.cpp, line 1167]
Event: 0.801 Thread 0x00000000023b5000 Exception <a 'java/lang/NoSuchFieldError': method resolution failed> (0x000000076c1ebbb0) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\methodHandles.cpp, line 1167]
Event: 1.048 Thread 0x00000000023b5000 Exception <a 'java/io/FileNotFoundException'> (0x000000076d8091e8) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\prims\jni.cpp, line 709]
Event: 2.160 Thread 0x00000000023b5000 Exception <a 'java/lang/StackOverflowError'> (0x000000076edb5148) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.160 Thread 0x00000000023b5000 Exception <a 'java/lang/StackOverflowError'> (0x000000076edb8e68) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.160 Thread 0x00000000023b5000 Exception <a 'java/lang/StackOverflowError'> (0x000000076edbcb88) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]
Event: 2.160 Thread 0x00000000023b5000 Exception <a 'java/lang/StackOverflowError'> (0x000000076edc08a8) thrown at [C:\re\workspace\8-2-build-windows-amd64-cygwin\jdk8u181\11358\hotspot\src\share\vm\runtime\javaCalls.cpp, line 386]

Events (10 events):
Event: 1.870 loading class org/openscience/cdk/tools/LoggingTool
Event: 1.870 loading class org/openscience/cdk/tools/LoggingTool done
Event: 1.881 Thread 0x00000000023b5000 DEOPT PACKING pc=0x0000000002841e1f sp=0x0000000002310610
Event: 1.881 Thread 0x00000000023b5000 DEOPT UNPACKING pc=0x00000000024f7890 sp=0x0000000002310390 mode 0
Event: 1.985 loading class org/openscience/cdk/graph/BitMatrix
Event: 1.985 loading class org/openscience/cdk/graph/BitMatrix done
Event: 1.992 loading class org/openscience/cdk/tools/LoggingTool
Event: 1.992 loading class org/openscience/cdk/tools/LoggingTool done
Event: 2.000 Thread 0x00000000023b5000 DEOPT PACKING pc=0x0000000002841e1f sp=0x00000000022ece00
Event: 2.000 Thread 0x00000000023b5000 DEOPT UNPACKING pc=0x00000000024f7890 sp=0x00000000022ecb80 mode 0


Dynamic libraries:
0x00007ff649660000 - 0x00007ff649697000 	C:\Program Files\Java\jdk1.8.0_181\bin\javaw.exe
0x00007ffb99920000 - 0x00007ffb99b10000 	C:\WINDOWS\SYSTEM32\ntdll.dll
0x00007ffb98c50000 - 0x00007ffb98d02000 	C:\WINDOWS\System32\KERNEL32.DLL
0x00007ffb97350000 - 0x00007ffb975f5000 	C:\WINDOWS\System32\KERNELBASE.dll
0x00007ffb97ad0000 - 0x00007ffb97b73000 	C:\WINDOWS\System32\ADVAPI32.dll
0x00007ffb97a30000 - 0x00007ffb97ace000 	C:\WINDOWS\System32\msvcrt.dll
0x00007ffb995d0000 - 0x00007ffb99667000 	C:\WINDOWS\System32\sechost.dll
0x00007ffb98ab0000 - 0x00007ffb98bd0000 	C:\WINDOWS\System32\RPCRT4.dll
0x00007ffb98490000 - 0x00007ffb98625000 	C:\WINDOWS\System32\USER32.dll
0x00007ffb979a0000 - 0x00007ffb979c1000 	C:\WINDOWS\System32\win32u.dll
0x00007ffb98d10000 - 0x00007ffb98d36000 	C:\WINDOWS\System32\GDI32.dll
0x00007ffb968b0000 - 0x00007ffb96a46000 	C:\WINDOWS\System32\gdi32full.dll
0x00007ffb976b0000 - 0x00007ffb9774e000 	C:\WINDOWS\System32\msvcp_win.dll
0x00007ffb978a0000 - 0x00007ffb9799a000 	C:\WINDOWS\System32\ucrtbase.dll
0x00007ffb7dd80000 - 0x00007ffb7e004000 	C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.18362.1082_none_9e8193e1e45b25c1\COMCTL32.dll
0x00007ffb98ea0000 - 0x00007ffb991d5000 	C:\WINDOWS\System32\combase.dll
0x00007ffb97800000 - 0x00007ffb97880000 	C:\WINDOWS\System32\bcryptPrimitives.dll
0x00007ffb99320000 - 0x00007ffb9934e000 	C:\WINDOWS\System32\IMM32.DLL
0x000000006a7b0000 - 0x000000006a882000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\msvcr100.dll
0x0000000069f00000 - 0x000000006a7a2000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\server\jvm.dll
0x00007ffb98630000 - 0x00007ffb98638000 	C:\WINDOWS\System32\PSAPI.DLL
0x00007ffb7db70000 - 0x00007ffb7db79000 	C:\WINDOWS\SYSTEM32\WSOCK32.dll
0x00007ffb869e0000 - 0x00007ffb86a04000 	C:\WINDOWS\SYSTEM32\WINMM.dll
0x00007ffb7db80000 - 0x00007ffb7db8a000 	C:\WINDOWS\SYSTEM32\VERSION.dll
0x00007ffb99560000 - 0x00007ffb995cf000 	C:\WINDOWS\System32\WS2_32.dll
0x00007ffb869b0000 - 0x00007ffb869dd000 	C:\WINDOWS\SYSTEM32\winmmbase.dll
0x00007ffb97660000 - 0x00007ffb976aa000 	C:\WINDOWS\System32\cfgmgr32.dll
0x0000000069ef0000 - 0x0000000069eff000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\verify.dll
0x0000000069ec0000 - 0x0000000069ee9000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\java.dll
0x0000000069ea0000 - 0x0000000069eb6000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\zip.dll
0x00007ffb97c60000 - 0x00007ffb98347000 	C:\WINDOWS\System32\SHELL32.dll
0x00007ffb99830000 - 0x00007ffb998d9000 	C:\WINDOWS\System32\shcore.dll
0x00007ffb96a50000 - 0x00007ffb971d0000 	C:\WINDOWS\System32\windows.storage.dll
0x00007ffb96860000 - 0x00007ffb96883000 	C:\WINDOWS\System32\profapi.dll
0x00007ffb96810000 - 0x00007ffb9685a000 	C:\WINDOWS\System32\powrprof.dll
0x00007ffb967e0000 - 0x00007ffb967f0000 	C:\WINDOWS\System32\UMPDC.dll
0x00007ffb99500000 - 0x00007ffb99552000 	C:\WINDOWS\System32\shlwapi.dll
0x00007ffb967f0000 - 0x00007ffb96801000 	C:\WINDOWS\System32\kernel.appcore.dll
0x00007ffb97880000 - 0x00007ffb97897000 	C:\WINDOWS\System32\cryptsp.dll
0x00007ffb732a0000 - 0x00007ffb733a4000 	C:\Users\mehme\.jnati\repo\jniinchi\1.03_1\WINDOWS-AMD64\JniInchi-1.03_1-WINDOWS-AMD64.dll
0x0000000069d00000 - 0x0000000069e99000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\awt.dll
0x00007ffb99760000 - 0x00007ffb99825000 	C:\WINDOWS\System32\OLEAUT32.dll
0x00007ffb94a40000 - 0x00007ffb94acf000 	C:\WINDOWS\SYSTEM32\apphelp.dll
0x0000000069cb0000 - 0x0000000069cf7000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\fontmanager.dll
0x0000000069c90000 - 0x0000000069caa000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\net.dll
0x00007ffb96030000 - 0x00007ffb96097000 	C:\WINDOWS\system32\mswsock.dll
0x0000000069c70000 - 0x0000000069c81000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\nio.dll
0x0000000069c20000 - 0x0000000069c62000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\t2k.dll
0x00007ffb94e50000 - 0x00007ffb94e7d000 	C:\WINDOWS\system32\DWMAPI.DLL
0x00007ffb94af0000 - 0x00007ffb94b89000 	C:\WINDOWS\system32\uxtheme.dll
0x0000000069bf0000 - 0x0000000069c1a000 	C:\Program Files\Java\jdk1.8.0_181\jre\bin\dcpr.dll
0x00007ffb95b40000 - 0x00007ffb95b73000 	C:\WINDOWS\system32\rsaenh.dll
0x00007ffb971d0000 - 0x00007ffb971f6000 	C:\WINDOWS\System32\bcrypt.dll
0x00007ffb96700000 - 0x00007ffb96725000 	C:\WINDOWS\SYSTEM32\USERENV.dll
0x00007ffb96200000 - 0x00007ffb9620c000 	C:\WINDOWS\SYSTEM32\CRYPTBASE.dll
0x00007ffb95d40000 - 0x00007ffb95d7a000 	C:\WINDOWS\SYSTEM32\IPHLPAPI.DLL
0x00007ffb983d0000 - 0x00007ffb983d8000 	C:\WINDOWS\System32\NSI.dll
0x00007ffb8b340000 - 0x00007ffb8b356000 	C:\WINDOWS\SYSTEM32\dhcpcsvc6.DLL
0x00007ffb8b8f0000 - 0x00007ffb8b90c000 	C:\WINDOWS\SYSTEM32\dhcpcsvc.DLL
0x00007ffb95d80000 - 0x00007ffb95e4b000 	C:\WINDOWS\SYSTEM32\DNSAPI.dll
0x00007ffb93250000 - 0x00007ffb93444000 	C:\WINDOWS\SYSTEM32\dbghelp.dll

VM Arguments:
jvm_args: -Dfile.encoding=Cp1252 
java_command: AlgorithmicGroupTheory.canonicalBlockwiseTest
java_class_path (initial): C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;C:\Users\mehme\eclipse-workspace\AlgorithmicGroupTheory\target\classes;C:\Users\mehme\Desktop\Current\cdk-2.3.jar;C:\Users\mehme\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mehme\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-data\2.3\cdk-data-2.3.jar;C:\Users\mehme\.m2\repository\javax\vecmath\vecmath\1.5.2\vecmath-1.5.2.jar;C:\Users\mehme\.m2\repository\com\google\guava\guava\17.0\guava-17.0.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-ioformats\2.3\cdk-ioformats-2.3.jar;C:\Users\mehme\.m2\repository\org\openscience\cdk\cdk-qsarmolecular\2.3\cdk-qsarmolecular-2.3.jar;C:\Users\mehme\.m2\repository\gov\nist\math\jama\1.0.3\jama-1.0.3.jar;C:\Users\mehme\.m2\repository\xom\xom\1.2.5\xom-1.2.5.jar;C:\Users\mehme\.m2\repository\xml-apis\xml-apis\1.3.03\xml-apis-1.3.03.jar;C:\Users\mehme\.m2\repository\xerces\xercesImpl\2.
Launcher Type: SUN_STANDARD

Environment Variables:
JAVA_HOME=C:\Program Files\Java\jdk-10.0.2
CLASSPATH=C:\Program Files (x86)\Novosoft\C2J\Bin\c2jruntime.zip;
PATH=C:/Program Files/Java/jdk-10.0.2/bin/server;C:/Program Files/Java/jdk-10.0.2/bin;C:\ProgramData\Boxstarter;C:\Program Files\Java\jdk-10.0.2\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;\;\Scripts\;C:\Python27\Scripts\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\bin;C:\Users\mehme\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Python3.7;C:\Users\mehme\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\mehme\AppData\Local\Programs\Python\Python37\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files (x86)\Novosoft\C2J\Bin;C:\Program Files\OpenBabel-2.4.1;C:\Users\mehme\AppData\Local\Microsoft\WindowsApps;C:\Users\mehme\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Users\mehme\AppData\Roaming\npm;C:\Users\mehme\AppData\Local\Microsoft\WindowsApps;C:\Users\mehme\AppData\Local\Programs\Microsoft VS Code\bin;C:\WINDOWS\system32;
USERNAME=mehme
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 142 Stepping 9, GenuineIntel



---------------  S Y S T E M  ---------------

OS: Windows 10.0 , 64 bit Build 18362 (10.0.18362.1082)

CPU:total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 142 stepping 9, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, avx, avx2, aes, clmul, erms, rtm, 3dnowpref, lzcnt, ht, tsc, tscinvbit, bmi1, bmi2, adx

Memory: 4k page, physical 16696792k(9258368k free), swap 19187160k(8198520k free)

vm_info: Java HotSpot(TM) 64-Bit Server VM (25.181-b13) for windows-amd64 JRE (1.8.0_181-b13), built on Jul  7 2018 04:01:33 by "java_re" with MS VC++ 10.0 (VS2010)

time: Thu Sep 10 20:19:15 2020
elapsed time: 2 seconds (0d 0h 0m 2s)

